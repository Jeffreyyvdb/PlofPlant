// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlofPlantData.Context;

#nullable disable

namespace PlofPlantData.Migrations
{
    [DbContext(typeof(PlofPlantDbContext))]
    [Migration("20220225093917_Innitial")]
    partial class Innitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PlofPlantData.Models.Kas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Co2")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeurOpen")
                        .HasColumnType("bit");

                    b.Property<double>("Luchtvochtigheid")
                        .HasColumnType("float");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Temp")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Kassen");
                });

            modelBuilder.Entity("PlofPlantData.Models.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VerdiepingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VerdiepingId");

                    b.ToTable("Planten");
                });

            modelBuilder.Entity("PlofPlantData.Models.Verdieping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Ec")
                        .HasColumnType("float");

                    b.Property<int?>("KasId")
                        .HasColumnType("int");

                    b.Property<double>("LichtLevel")
                        .HasColumnType("float");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Ph")
                        .HasColumnType("float");

                    b.Property<double>("WaterLevel")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("KasId");

                    b.ToTable("Verdiepingen");
                });

            modelBuilder.Entity("PlofPlantData.Models.Plant", b =>
                {
                    b.HasOne("PlofPlantData.Models.Verdieping", null)
                        .WithMany("Planten")
                        .HasForeignKey("VerdiepingId");
                });

            modelBuilder.Entity("PlofPlantData.Models.Verdieping", b =>
                {
                    b.HasOne("PlofPlantData.Models.Kas", null)
                        .WithMany("Verdiepingen")
                        .HasForeignKey("KasId");
                });

            modelBuilder.Entity("PlofPlantData.Models.Kas", b =>
                {
                    b.Navigation("Verdiepingen");
                });

            modelBuilder.Entity("PlofPlantData.Models.Verdieping", b =>
                {
                    b.Navigation("Planten");
                });
#pragma warning restore 612, 618
        }
    }
}
